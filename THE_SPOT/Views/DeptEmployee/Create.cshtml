@*@using static THE_SPOT.Models.DeptEmployeePR
@model THE_SPOT.Models.DeptEmployeePR
@{
    ViewData["Title"] = "Create Purchase Request";
}

<h4 class="text-bold text-warning">TERM TWO</h4>

<form method="post" asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group row"></div>
    @using (Html.BeginForm("Create", "Home", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="form-outline mb-4">
            <label class="form-label" for="form3Example">Tutor Name</label>
            <input asp-for="tutorName" type="text" id="form3Example1cg" class="form-control form-control-lg" />
            @Html.ValidationSummary(true, "", new{@class = "text-danger"})
            @Html.ValidationMessageFor(model => model.tutorName, "", new {@class = "text-danger"})
        </div>

        <div class="form-outline mb-4">
            <label class="form-label" for="form3Example">Student Name</label>
            <input asp-for="studentName" type="text" id="form3Example1cg" class="form-control form-control-lg" />
            @Html.ValidationSummary(true, "", new{@class = "text-danger"})
            @Html.ValidationMessageFor(model => model.studentName, "", new {@class = "text-danger"})
        </div>

        <div class="form-outline mb-4">
            <label class="form-label" for="form3Example1cg" style="width:1000px">Select Subject</label>
            @Html.DropDownListFor(m=> m.studentSubject, new SelectList(Enum.GetValues(typeof(StudentSubject))),"Select one option", new {@class="form-control"})
            @Html.ValidationSummary(true, "", new{@class = "text-danger"})
            @Html.ValidationMessageFor(model => model.studentSubject, "", new {@class = "text-danger"})
        </div>

        <div class="form-outline mb-4">
            <label class="form-label" for="form3Example">Student Problem</label>
            <input asp-for="studentProblem" type="text" id="form3Example1cg" class="form-control form-control-lg" />
            @Html.ValidationSummary(true, "", new{@class = "text-danger"})
            @Html.ValidationMessageFor(model => model.studentProblem, "", new {@class = "text-danger"})
        </div>

        <div class="form-outline mb-4">
            <label class="form-label" for="form3Example1cg" style="width:1000px">Select Grade</label>
            @Html.DropDownListFor(m=> m.grade, new SelectList(Enum.GetValues(typeof(StudentGrade))),"Select one option", new {@class="form-control"})
            @Html.ValidationSummary(true, "", new{@class = "text-danger"})
            @Html.ValidationMessageFor(model => model.grade, "", new {@class = "text-danger"})
        </div>
        <br />

        <div class="text-lg-center">
            <input type="submit" class="btn btn-md btn-outline-warning" value="CREATE" />
            <button type="button" class="btn btn-md btn-outline-warning" onclick="location.href='@Url.Action("Index", "TutorAssign2")'">VIEW ASSIGNED</button>
            <button type="button" class="btn btn-md btn-outline-danger" onclick="location.href = '@Url.Action("Index","TutorAssign")'">BACK</button>
        </div>
    }
</form>
*@